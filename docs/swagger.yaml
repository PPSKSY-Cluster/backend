basePath: /
definitions:
  db.CResource:
    properties:
      _id:
        type: string
      admins:
        items:
          type: string
        type: array
      balancingAlg:
        type: integer
      description:
        type: string
      highAvailability:
        description: HA
        type: boolean
      highPerformanceComputing:
        description: HPC
        type: boolean
      name:
        type: string
      nodes:
        type: integer
      operatingSystem:
        type: integer
      reservations:
        items:
          type: string
        type: array
      type:
        type: integer
    type: object
  db.User:
    properties:
      _id:
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API for the PPSKSY-Cluster Webapplication
  license:
    name: MIT
  title: PPSKSY-Cluster API
  version: "1.0"
paths:
  /api/cresources/:
    get:
      description: Get all cluster resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.CResource'
            type: array
        "500":
          description: ""
      tags:
      - cluster-resources
    post:
      consumes:
      - application/json
      description: Create cluster resource
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.CResource'
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - cluster-resources
  /api/cresources/{id}:
    delete:
      description: Delete cluster resource
      parameters:
      - description: CResource ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "500":
          description: ""
      tags:
      - cluster-resources
    get:
      description: Get cluster resource by ID
      parameters:
      - description: CResource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.CResource'
        "404":
          description: ""
      tags:
      - cluster-resources
    put:
      consumes:
      - application/json
      description: Update cluster resource
      parameters:
      - description: CResource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.CResource'
        "500":
          description: ""
      tags:
      - cluster-resources
  /api/docs/:
    get:
      description: The route that serves the swagger documentation
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: html
      tags:
      - general
  /api/login:
    post:
      consumes:
      - application/json
      description: Route for login
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: ""
      tags:
      - general
  /api/ping:
    get:
      description: Ping route to act as healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - general
  /api/users/:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
        "500":
          description: ""
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - users
  /api/users/{id}:
    delete:
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "500":
          description: ""
      tags:
      - users
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "404":
          description: ""
        "500":
          description: ""
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "500":
          description: ""
      tags:
      - users
swagger: "2.0"
